"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[785],{5718:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"deploy/deploy-on-push","title":"Enabling Automatic Pipeline Execution on PR Merge","description":"To enable the deployment pipeline to run automatically when a Pull Request (PR) is merged into the main branch, you need to uncomment specific lines in the .github/workflows/deploy.yaml file. Locate the following section:","source":"@site/docs/deploy/deploy-on-push.md","sourceDirName":"deploy","slug":"/deploy/deploy-on-push","permalink":"/kickstart-selfhosted-pages/deploy/deploy-on-push","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"defaultSidebar","previous":{"title":"Initial Deploy","permalink":"/kickstart-selfhosted-pages/deploy/initial-deploy"},"next":{"title":"Destroy","permalink":"/kickstart-selfhosted-pages/deploy/destroy"}}');var i=t(4848),s=t(8453);const a={sidebar_position:2},l="Enabling Automatic Pipeline Execution on PR Merge",r={},c=[];function p(e){const n={admonition:"admonition",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"enabling-automatic-pipeline-execution-on-pr-merge",children:"Enabling Automatic Pipeline Execution on PR Merge"})}),"\n",(0,i.jsxs)(n.p,{children:["To enable the deployment pipeline to run automatically when a Pull Request (PR) is merged into the main branch, you need to uncomment specific lines in the ",(0,i.jsx)(n.code,{children:".github/workflows/deploy.yaml"})," file. Locate the following section:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'name: Deploy\n\non:\n  # push:\n  #   branches: [ main ]\n  #   paths:\n  #     - "infra/**"\n  #     - "containers-host/**"\n  #     - ".github/workflows/**"\n  #     - "!containers-host/apps/**"\n  workflow_dispatch:\n\n'})}),"\n",(0,i.jsx)(n.p,{children:"By uncommenting the lines related to the push event, the deployment pipeline will be triggered automatically every time a PR is merged into the main branch. This eliminates the need to manually initiate the deployment from the web UI."}),"\n",(0,i.jsx)(n.admonition,{type:"note",children:(0,i.jsxs)(n.p,{children:["Please note that the pipeline will not be triggered if there are changes made to any files within the ",(0,i.jsx)(n.code,{children:"containers-host/apps"})," directory. This is intentional, as we want the deployer script to manage updates to the Docker Compose files located in the apps directory."]})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>l});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);